import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder, MinMaxScaler
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error

# Load the data
data = pd.read_csv('sales_data.csv')  # Replace 'sales_data.csv' with your dataset filename

# Split the data into features and target variable
X = data.drop('sales', axis=1)
y = data['sales']

# Perform Label Encoding on categorical features
le = LabelEncoder()
X_categorical = X.select_dtypes(include=['object'])
X_categorical = X_categorical.apply(le.fit_transform)

# Perform MinMax Scaling on numerical features
scaler = MinMaxScaler()
X_numerical = X.select_dtypes(include=['float', 'int'])
X_numerical = pd.DataFrame(scaler.fit_transform(X_numerical), columns=X_numerical.columns)

# Combine categorical and numerical features
X_encoded = pd.concat([X_categorical, X_numerical], axis=1)

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X_encoded, y, test_size=0.2, random_state=42)

# Create and train the Random Forest Regressor model
model = RandomForestRegressor(n_estimators=100, max_depth=10, random_state=42)
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Calculate RMSE score
rmse = mean_squared_error(y_test, y_pred, squared=False)
print(f"RMSE score: {rmse}")

